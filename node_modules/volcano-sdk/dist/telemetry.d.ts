import type { StepResult, LLMHandle, MCPHandle } from './volcano-sdk.js';
type Tracer = any;
type Span = any;
type Meter = any;
export type VolcanoTelemetryConfig = {
    serviceName?: string;
    tracer?: Tracer;
    meter?: Meter;
    traces?: boolean;
    metrics?: boolean;
};
export type VolcanoTelemetry = {
    startAgentSpan: (stepCount: number) => Span | null;
    startStepSpan: (parent: Span | null, stepIndex: number, stepType: string) => Span | null;
    startLLMSpan: (parent: Span | null, llm: LLMHandle, prompt: string) => Span | null;
    startMCPSpan: (parent: Span | null, mcp: MCPHandle, operation: string) => Span | null;
    endSpan: (span: Span | null, result?: StepResult, error?: any) => void;
    recordMetric: (name: string, value: number, attributes?: Record<string, any>) => void;
};
export declare function createVolcanoTelemetry(config?: VolcanoTelemetryConfig): VolcanoTelemetry;
export declare const noopTelemetry: VolcanoTelemetry;
export {};
